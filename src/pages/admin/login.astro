---
import BaseHead from '../../components/BaseHead.astro';
import { SITE_TITLE } from '../../consts';

const pageTitle = "Admin Login";
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={`${pageTitle} | ${SITE_TITLE}`} description="Blog admin login" />
	</head>
	<body>
		<div class="min-h-screen bg-secondary flex flex-col justify-center py-12 sm:px-6 lg:px-8">
			<div class="sm:mx-auto sm:w-full sm:max-w-md">
				<div class="text-center">
					<h1 class="text-3xl font-bold text-primary mb-2">
						{SITE_TITLE}
					</h1>
					<h2 class="text-xl text-secondary">
						Admin Login
					</h2>
				</div>
			</div>

			<div class="mt-8 sm:mx-auto sm:w-full sm:max-w-md">
				<div class="bg-primary py-8 px-4 shadow sm:rounded-lg sm:px-10">
					<form id="login-form" class="space-y-6">
						<div>
							<label for="password" class="block text-sm font-medium text-secondary">
								Admin Password
							</label>
							<div class="mt-1">
								<input
									id="password"
									name="password"
									type="password"
									required
									class="appearance-none block w-full px-3 py-2 border border-light rounded-md placeholder-muted focus:outline-none focus:ring-accent focus:border-accent sm:text-sm"
									placeholder="Enter admin password"
								/>
							</div>
						</div>

						<div>
							<button
								type="submit"
								class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-accent hover:bg-accent-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-accent disabled:opacity-50 disabled:cursor-not-allowed"
								id="submit-btn"
							>
								Login
							</button>
						</div>

						<!-- Error Message -->
						<div id="error-message" class="hidden">
							<div class="rounded-md bg-red-50 p-4">
								<div class="flex">
									<div class="flex-shrink-0">
										<svg class="h-5 w-5 text-red-400" viewBox="0 0 20 20" fill="currentColor">
											<path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
										</svg>
									</div>
									<div class="ml-3">
										<h3 class="text-sm font-medium text-red-800" id="error-text">
											Login Failed
										</h3>
									</div>
								</div>
							</div>
						</div>

						<!-- Success Message -->
						<div id="success-message" class="hidden">
							<div class="rounded-md bg-green-50 p-4">
								<div class="flex">
									<div class="flex-shrink-0">
										<svg class="h-5 w-5 text-green-400" viewBox="0 0 20 20" fill="currentColor">
											<path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
										</svg>
									</div>
									<div class="ml-3">
										<h3 class="text-sm font-medium text-green-800">
											Login successful, redirecting...
										</h3>
									</div>
								</div>
							</div>
						</div>
					</form>

					<div class="mt-6">
						<div class="text-center">
							<a href="/" class="text-sm text-secondary hover:text-accent">
								‚Üê Back to Home
							</a>
						</div>
					</div>
				</div>
			</div>
		</div>

		<script>
			document.addEventListener('DOMContentLoaded', () => {
				const form = document.getElementById('login-form') as HTMLFormElement;
				const submitBtn = document.getElementById('submit-btn') as HTMLButtonElement;
				const errorMessage = document.getElementById('error-message') as HTMLElement;
				const successMessage = document.getElementById('success-message') as HTMLElement;
				const errorText = document.getElementById('error-text') as HTMLElement;

				// Check if already logged in
				const token = localStorage.getItem('admin_token');
				if (token) {
					window.location.href = '/admin';
					return;
				}

				form.addEventListener('submit', async (e) => {
					e.preventDefault();
					
					const formData = new FormData(form);
					const password = formData.get('password') as string;

					if (!password) {
						showError('Please enter password');
						return;
					}

					// Show loading state
					submitBtn.disabled = true;
					submitBtn.textContent = 'Logging in...';
					hideMessages();

					try {
						const response = await fetch('/api/auth/login', {
							method: 'POST',
							headers: {
								'Content-Type': 'application/json',
							},
							body: JSON.stringify({ password }),
						});

						const result = await response.json() as {
							success: boolean;
							data?: { token: string; expires: string };
							error?: string;
						};

						if (result.success) {
							// Save token to localStorage
							localStorage.setItem('admin_token', result.data!.token);
							localStorage.setItem('admin_token_expires', result.data!.expires);
							
							// Show success message
							showSuccess();
							
							// Redirect to admin page
							setTimeout(() => {
								window.location.href = '/admin';
							}, 1000);
						} else {
							showError(result.error || 'Login failed');
						}
					} catch (error) {
						console.error('Login error:', error);
						showError('Network error, please try again later');
					} finally {
						submitBtn.disabled = false;
						submitBtn.textContent = 'Login';
					}
				});

				function showError(message: string) {
					errorText.textContent = message;
					errorMessage.classList.remove('hidden');
					successMessage.classList.add('hidden');
				}

				function showSuccess() {
					successMessage.classList.remove('hidden');
					errorMessage.classList.add('hidden');
				}

				function hideMessages() {
					errorMessage.classList.add('hidden');
					successMessage.classList.add('hidden');
				}
			});
		</script>
	</body>
</html>