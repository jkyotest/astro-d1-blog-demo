---
export const prerender = false;

// Tags page - displays all available tags
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';
import { createRepositories } from '../db/database';
import { getSiteConfigWithFallback } from '../lib/config';
import type { Tag } from '../types/database';

// Fetch tags from database
let tags: Tag[] = [];
let tagStats: Record<string, number> = {};

// Get site configuration for footer
const siteConfig = await getSiteConfigWithFallback(Astro.locals.runtime?.env.DB);

try {
  if (Astro.locals.runtime?.env.DB) {
    const repositories = createRepositories(Astro.locals.runtime.env.DB);
    tags = await repositories.tags.findAll();
    
    // Get tag usage statistics (all posts regardless of type)
    for (const tag of tags) {
      try {
        const postCount = await repositories.posts.findMany({
          tag: tag.slug,
          status: 'published',
          limit: 1000 // Get count only
        });
        tagStats[tag.slug] = postCount.total;
      } catch (error) {
        console.error(`Error getting stats for tag ${tag.name}:`, error);
        tagStats[tag.slug] = 0;
      }
    }
    
    // Sort tags by usage count (most used first), then alphabetically
    tags.sort((a, b) => {
      const countDiff = (tagStats[b.slug] || 0) - (tagStats[a.slug] || 0);
      if (countDiff !== 0) return countDiff;
      return a.name.localeCompare(b.name);
    });
  }
} catch (error) {
  console.error('Error fetching tags:', error);
}
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<BaseHead title={`Tags | ${SITE_TITLE}`} description="Browse all tags" />
	</head>
	<body>
		<Header siteTitle={siteConfig.brandName} />
		<main class="min-h-screen bg-gradient-to-br from-secondary via-primary to-emerald-50">
			<!-- Page Header -->
			<header class="bg-surface border-b border-surface">
				<div class="container-responsive py-12 lg:py-16">
					<div class="max-w-4xl mx-auto text-center">
						<h1 class="text-4xl lg:text-5xl font-bold text-primary mb-6 text-balance">
							Explore by Tags
						</h1>
						<p class="text-xl text-secondary leading-relaxed max-w-2xl mx-auto">
							Discover content organized by topics and themes
						</p>
						<div class="flex items-center justify-center gap-4 mt-6 text-sm text-muted">
							<span class="flex items-center gap-1">
								<svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
									<path fill-rule="evenodd" d="M9.243 3.03a1 1 0 01.727 1.213L9.53 6h2.94l.56-2.243a1 1 0 111.94.486L14.53 6H17a1 1 0 110 2h-2.97l-1 4H15a1 1 0 110 2h-2.47l-.56 2.242a1 1 0 11-1.94-.485L10.47 14H7.53l-.56 2.242a1 1 0 11-1.94-.485L5.47 14H3a1 1 0 110-2h2.97l1-4H5a1 1 0 110-2h2.47l.56-2.243a1 1 0 011.213-.727zM9.03 8l-1 4h2.94l1-4H9.03z" clip-rule="evenodd" />
								</svg>
								{tags.length} tags
							</span>
							<span>•</span>
							<a href="/posts" class="hover:text-accent transition-colors">
								View all posts →
							</a>
						</div>
					</div>
				</div>
			</header>

			<!-- Tags Grid -->
			<section class="container-responsive py-12 lg:py-16">
				<div class="max-w-6xl mx-auto">
					{tags.length > 0 ? (
						<div class="grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 xl:grid-cols-6 gap-3 lg:gap-4">
							{tags.map((tag) => {
								const postCount = tagStats[tag.slug] || 0;
								return (
									<a 
										href={`/posts?tag=${tag.slug}`}
										class="group block bg-primary rounded-lg border border-light p-4 hover:border-accent hover:shadow-md transition-all duration-300 cursor-pointer"
									>
										<div class="flex items-center justify-between mb-3">
											<div class="w-8 h-8 bg-gradient-to-br from-emerald-100 to-emerald-200 rounded-md flex items-center justify-center group-hover:from-emerald-200 group-hover:to-emerald-300 transition-colors">
												<svg class="w-4 h-4 text-emerald-600" fill="currentColor" viewBox="0 0 20 20">
													<path fill-rule="evenodd" d="M9.243 3.03a1 1 0 01.727 1.213L9.53 6h2.94l.56-2.243a1 1 0 111.94.486L14.53 6H17a1 1 0 110 2h-2.97l-1 4H15a1 1 0 110 2h-2.47l-.56 2.242a1 1 0 11-1.94-.485L10.47 14H7.53l-.56 2.242a1 1 0 11-1.94-.485L5.47 14H3a1 1 0 110-2h2.97l1-4H5a1 1 0 110-2h2.47l.56-2.243a1 1 0 011.213-.727zM9.03 8l-1 4h2.94l1-4H9.03z" clip-rule="evenodd" />
												</svg>
											</div>
											{postCount > 0 && (
												<span class="inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium bg-slate-100 text-slate-600">
													{postCount}
												</span>
											)}
										</div>
										
										<div>
											<h3 class="text-sm font-medium text-slate-900 group-hover:text-emerald-600 transition-colors truncate">
												{tag.name}
											</h3>
											{tag.description && (
												<p class="text-xs text-slate-500 mt-1 line-clamp-2 leading-relaxed">
													{tag.description}
												</p>
											)}
										</div>
									</a>
								);
							})}
						</div>
					) : (
						<div class="text-center py-20 lg:py-24">
							<div class="w-24 h-24 mx-auto mb-8 bg-gradient-to-br from-emerald-100 to-slate-100 rounded-2xl flex items-center justify-center">
								<svg class="w-12 h-12 text-emerald-500" fill="currentColor" viewBox="0 0 20 20">
									<path fill-rule="evenodd" d="M9.243 3.03a1 1 0 01.727 1.213L9.53 6h2.94l.56-2.243a1 1 0 111.94.486L14.53 6H17a1 1 0 110 2h-2.97l-1 4H15a1 1 0 110 2h-2.47l-.56 2.242a1 1 0 11-1.94-.485L10.47 14H7.53l-.56 2.242a1 1 0 11-1.94-.485L5.47 14H3a1 1 0 110-2h2.97l1-4H5a1 1 0 110-2h2.47l.56-2.243a1 1 0 011.213-.727zM9.03 8l-1 4h2.94l1-4H9.03z" clip-rule="evenodd" />
								</svg>
							</div>
							<div class="space-y-4">
								<h3 class="text-2xl font-semibold text-slate-900">No Tags Yet</h3>
								<p class="text-lg text-slate-600 max-w-md mx-auto leading-relaxed">
									Tags will appear here as content is published with associated topics.
								</p>
							</div>
							<div class="mt-8">
								<a 
									href="/posts" 
									class="inline-flex items-center gap-2 px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 transition-colors font-medium"
								>
									Explore Posts
									<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6" />
									</svg>
								</a>
							</div>
						</div>
					)}
				</div>
			</section>
		</main>
		<Footer siteTitle={siteConfig.brandName} socialLinks={siteConfig.socialLinks || []} />
	</body>
</html>